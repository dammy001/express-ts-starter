{"version":3,"sources":["../../src/utils/utils.test.ts"],"sourcesContent":["import { errorResponse, successResponse } from './status-code.utils'\nimport { StatusCode } from '@/utils'\n\ndescribe('successResponse', () => {\n  it('should return a success response with default values', () => {\n    const response = successResponse()\n\n    expect(response).toEqual({\n      success: true,\n      data: {},\n      message: '',\n      status: StatusCode.OK,\n    })\n  })\n\n  it('should return a success response with custom values', () => {\n    const data = { key: 'value' }\n    const message = 'Custom message'\n    const statusCode = StatusCode.CREATED\n\n    const response = successResponse(data, message, statusCode)\n\n    expect(response).toEqual({\n      success: true,\n      data,\n      message,\n      status: statusCode,\n    })\n  })\n})\n\ndescribe('errorResponse', () => {\n  it('should return an error response with default values', () => {\n    const response = errorResponse(null)\n\n    expect(response).toEqual({\n      success: false,\n      error: null,\n      message: 'Sorry, an error occured',\n      status: StatusCode.BAD_REQUEST,\n    })\n  })\n\n  it('should return an error response with custom values', () => {\n    const customError = new Error('Custom error')\n    const message = 'Custom error message'\n    const statusCode = StatusCode.SERVER_ERROR\n\n    const response = errorResponse(customError, message, statusCode)\n\n    expect(response).toEqual({\n      success: false,\n      error: customError,\n      message,\n      status: statusCode,\n    })\n  })\n})\n"],"names":["describe","it","response","successResponse","expect","toEqual","success","data","message","status","StatusCode","OK","key","statusCode","CREATED","errorResponse","error","BAD_REQUEST","customError","Error","SERVER_ERROR"],"mappings":";;;;iCAA+C;uBACpB;AAE3BA,SAAS,mBAAmB;IAC1BC,GAAG,wDAAwD;QACzD,MAAMC,WAAWC,IAAAA,gCAAe;QAEhCC,OAAOF,UAAUG,OAAO,CAAC;YACvBC,SAAS;YACTC,MAAM,CAAC;YACPC,SAAS;YACTC,QAAQC,iBAAU,CAACC,EAAE;QACvB;IACF;IAEAV,GAAG,uDAAuD;QACxD,MAAMM,OAAO;YAAEK,KAAK;QAAQ;QAC5B,MAAMJ,UAAU;QAChB,MAAMK,aAAaH,iBAAU,CAACI,OAAO;QAErC,MAAMZ,WAAWC,IAAAA,gCAAe,EAACI,MAAMC,SAASK;QAEhDT,OAAOF,UAAUG,OAAO,CAAC;YACvBC,SAAS;YACTC;YACAC;YACAC,QAAQI;QACV;IACF;AACF;AAEAb,SAAS,iBAAiB;IACxBC,GAAG,uDAAuD;QACxD,MAAMC,WAAWa,IAAAA,8BAAa,EAAC;QAE/BX,OAAOF,UAAUG,OAAO,CAAC;YACvBC,SAAS;YACTU,OAAO;YACPR,SAAS;YACTC,QAAQC,iBAAU,CAACO,WAAW;QAChC;IACF;IAEAhB,GAAG,sDAAsD;QACvD,MAAMiB,cAAc,IAAIC,MAAM;QAC9B,MAAMX,UAAU;QAChB,MAAMK,aAAaH,iBAAU,CAACU,YAAY;QAE1C,MAAMlB,WAAWa,IAAAA,8BAAa,EAACG,aAAaV,SAASK;QAErDT,OAAOF,UAAUG,OAAO,CAAC;YACvBC,SAAS;YACTU,OAAOE;YACPV;YACAC,QAAQI;QACV;IACF;AACF"}