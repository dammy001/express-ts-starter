{"version":3,"sources":["../../src/exceptions/base.exception.ts"],"sourcesContent":["import { StatusCode } from '@utils'\n\nexport class BaseError extends Error {\n  public readonly statusCode: any\n  public readonly isOperational: boolean\n\n  constructor(statusCode: StatusCode, message: string, isOperational?: boolean) {\n    super(message)\n\n    Object.setPrototypeOf(this, new.target.prototype)\n\n    this.statusCode = statusCode\n    this.isOperational = isOperational || false\n\n    Error.captureStackTrace(this)\n  }\n}\n"],"names":["BaseError","Error","constructor","statusCode","message","isOperational","Object","setPrototypeOf","prototype","captureStackTrace"],"mappings":";;;;+BAEaA;;;eAAAA;;;;;;;;;;;;;;;;AAAN,MAAMA,kBAAkBC;IAI7BC,YAAYC,UAAsB,EAAEC,OAAe,EAAEC,aAAuB,CAAE;QAC5E,KAAK,CAACD;QAJR,uBAAgBD,cAAhB,KAAA;QACA,uBAAgBE,iBAAhB,KAAA;QAKEC,OAAOC,cAAc,CAAC,IAAI,EAAE,WAAWC,SAAS;QAEhD,IAAI,CAACL,UAAU,GAAGA;QAClB,IAAI,CAACE,aAAa,GAAGA,iBAAiB;QAEtCJ,MAAMQ,iBAAiB,CAAC,IAAI;IAC9B;AACF"}