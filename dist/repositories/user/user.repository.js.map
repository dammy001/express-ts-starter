{"version":3,"sources":["../../../src/repositories/user/user.repository.ts"],"sourcesContent":["import { Prisma } from '@prisma/client'\nimport { BaseRepository } from '../base.repository'\nimport { UserEntity } from '../../entities/user.entity'\nimport { prisma, userSelect } from '@/lib'\n\nexport class UserRepository extends BaseRepository<Prisma.UserDelegate> {\n  constructor() {\n    super(prisma.user, UserEntity)\n  }\n\n  async findByEmail(email: string): Promise<UserEntity | null> {\n    return await this.findOne<\n      Prisma.UserFindFirstArgs['where'],\n      Prisma.UserFindFirstArgs['select']\n    >(\n      {\n        email,\n      },\n      { ...userSelect },\n    )\n  }\n\n  async createOne(data: Prisma.UserCreateInput): Promise<UserEntity> {\n    return await this.create<Prisma.UserCreateInput>(data, { ...userSelect })\n  }\n}\n"],"names":["UserRepository","BaseRepository","findByEmail","email","findOne","userSelect","createOne","data","create","constructor","prisma","user","UserEntity"],"mappings":";;;;+BAKaA;;;eAAAA;;;gCAJkB;4BACJ;qBACQ;AAE5B,MAAMA,uBAAuBC,8BAAc;IAKhD,MAAMC,YAAYC,KAAa,EAA8B;QAC3D,OAAO,MAAM,IAAI,CAACC,OAAO,CAIvB;YACED;QACF,GACA;YAAE,GAAGE,eAAU;QAAC;IAEpB;IAEA,MAAMC,UAAUC,IAA4B,EAAuB;QACjE,OAAO,MAAM,IAAI,CAACC,MAAM,CAAyBD,MAAM;YAAE,GAAGF,eAAU;QAAC;IACzE;IAlBAI,aAAc;QACZ,KAAK,CAACC,WAAM,CAACC,IAAI,EAAEC,sBAAU;IAC/B;AAiBF"}