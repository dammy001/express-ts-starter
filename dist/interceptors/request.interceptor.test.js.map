{"version":3,"sources":["../../src/interceptors/request.interceptor.test.ts"],"sourcesContent":["import { plainToInstance } from 'class-transformer'\nimport * as classValidator from 'class-validator'\nimport { Request, Response } from 'express'\nimport { validateRequest } from './request.interceptor'\n\nvi.mock('class-transformer')\n// vi.mock('class-validator')\n\ndescribe('validateRequest', () => {\n  const mockRequest = {\n    body: {},\n    query: {},\n    params: {},\n  } as Request\n\n  const mockResponse = {\n    status: vi.fn().mockReturnThis(),\n    json: vi.fn(),\n  } as unknown as Response\n\n  const mockNext = vi.fn()\n\n  class MockType {\n    // Define a simple mock class that matches your DTO structure\n  }\n\n  it('should validate request body and call next for valid data', async () => {\n    const mockDto = new MockType() // Create a mock DTO instance\n\n    ;(plainToInstance as any).mockReturnValue(mockDto)\n\n    // Mock the validate function\n    const validateSpy = vi.spyOn(classValidator, 'validate')\n    validateSpy.mockResolvedValue([]) // No validation errors\n\n    const middleware = validateRequest(MockType, 'body', false, true, true)\n\n    await middleware(mockRequest, mockResponse, mockNext)\n\n    expect(plainToInstance).toHaveBeenCalledWith(MockType, mockRequest.body)\n    expect(validateSpy).toHaveBeenCalledWith(mockDto, {\n      skipMissingProperties: false,\n      whitelist: true,\n      forbidNonWhitelisted: true,\n    })\n\n    expect(mockRequest.body).toEqual(mockDto)\n\n    validateSpy.mockRestore()\n  })\n})\n"],"names":["vi","mock","describe","mockRequest","body","query","params","mockResponse","status","fn","mockReturnThis","json","mockNext","MockType","it","mockDto","plainToInstance","mockReturnValue","validateSpy","spyOn","classValidator","mockResolvedValue","middleware","validateRequest","expect","toHaveBeenCalledWith","skipMissingProperties","whitelist","forbidNonWhitelisted","toEqual","mockRestore"],"mappings":";;;;kCAAgC;wEACA;oCAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhCA,GAAGC,IAAI,CAAC;AACR,6BAA6B;AAE7BC,SAAS,mBAAmB;IAC1B,MAAMC,cAAc;QAClBC,MAAM,CAAC;QACPC,OAAO,CAAC;QACRC,QAAQ,CAAC;IACX;IAEA,MAAMC,eAAe;QACnBC,QAAQR,GAAGS,EAAE,GAAGC,cAAc;QAC9BC,MAAMX,GAAGS,EAAE;IACb;IAEA,MAAMG,WAAWZ,GAAGS,EAAE;IAEtB,MAAMI;IAEN;IAEAC,GAAG,6DAA6D;QAC9D,MAAMC,UAAU,IAAIF,WAAW,6BAA6B;;QAE1DG,iCAAe,CAASC,eAAe,CAACF;QAE1C,6BAA6B;QAC7B,MAAMG,cAAclB,GAAGmB,KAAK,CAACC,iBAAgB;QAC7CF,YAAYG,iBAAiB,CAAC,EAAE,EAAE,uBAAuB;;QAEzD,MAAMC,aAAaC,IAAAA,mCAAe,EAACV,UAAU,QAAQ,OAAO,MAAM;QAElE,MAAMS,WAAWnB,aAAaI,cAAcK;QAE5CY,OAAOR,iCAAe,EAAES,oBAAoB,CAACZ,UAAUV,YAAYC,IAAI;QACvEoB,OAAON,aAAaO,oBAAoB,CAACV,SAAS;YAChDW,uBAAuB;YACvBC,WAAW;YACXC,sBAAsB;QACxB;QAEAJ,OAAOrB,YAAYC,IAAI,EAAEyB,OAAO,CAACd;QAEjCG,YAAYY,WAAW;IACzB;AACF"}