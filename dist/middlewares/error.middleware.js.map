{"version":3,"sources":["../../src/middlewares/error.middleware.ts"],"sourcesContent":["import type { NextFunction, Request, Response } from 'express'\nimport logger from '@config/logger'\nimport { ISPRODUCTION } from '@config'\nimport { StatusCode } from '@utils'\n\nexport const ErrorInterceptor = (error: any, req: Request, res: Response, next: NextFunction) => {\n  try {\n    const status = +error?.statusCode || StatusCode.SERVER_ERROR\n    const message: string =\n      ISPRODUCTION && status >= StatusCode.SERVER_ERROR ? 'Something went wrong' : error?.message\n\n    if (status >= StatusCode.SERVER_ERROR) {\n      logger.error(`[${req.method}] ${req.path} >> StatusCode:: ${status}, Message:: ${message}`)\n    }\n\n    return res.status(status).json({ status: false, message })\n  } catch (err) {\n    next(err)\n  }\n}\n"],"names":["ErrorInterceptor","error","req","res","next","status","statusCode","StatusCode","SERVER_ERROR","message","ISPRODUCTION","logger","method","path","json","err"],"mappings":";;;;+BAKaA;;;eAAAA;;;+DAJM;wBACU;uBACF;;;;;;AAEpB,MAAMA,mBAAmB,CAACC,OAAYC,KAAcC,KAAeC;IACxE,IAAI;QACF,MAAMC,SAAS,CAACJ,OAAOK,cAAcC,iBAAU,CAACC,YAAY;QAC5D,MAAMC,UACJC,oBAAY,IAAIL,UAAUE,iBAAU,CAACC,YAAY,GAAG,yBAAyBP,OAAOQ;QAEtF,IAAIJ,UAAUE,iBAAU,CAACC,YAAY,EAAE;YACrCG,eAAM,CAACV,KAAK,CAAC,CAAC,CAAC,EAAEC,IAAIU,MAAM,CAAC,EAAE,EAAEV,IAAIW,IAAI,CAAC,iBAAiB,EAAER,OAAO,YAAY,EAAEI,QAAQ,CAAC;QAC5F;QAEA,OAAON,IAAIE,MAAM,CAACA,QAAQS,IAAI,CAAC;YAAET,QAAQ;YAAOI;QAAQ;IAC1D,EAAE,OAAOM,KAAK;QACZX,KAAKW;IACP;AACF"}